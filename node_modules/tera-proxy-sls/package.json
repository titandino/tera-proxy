{
  "_args": [
    [
      {
        "raw": "tera-proxy-sls@github:meishuu/tera-proxy-sls",
        "scope": null,
        "escapedName": "tera-proxy-sls",
        "name": "tera-proxy-sls",
        "rawSpec": "github:meishuu/tera-proxy-sls",
        "spec": "github:meishuu/tera-proxy-sls",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:meishuu/tera-proxy-sls.git",
          "sshUrl": "git+ssh://git@github.com/meishuu/tera-proxy-sls.git",
          "httpsUrl": "git+https://github.com/meishuu/tera-proxy-sls.git",
          "gitUrl": "git://github.com/meishuu/tera-proxy-sls.git",
          "shortcut": "github:meishuu/tera-proxy-sls",
          "directUrl": "https://raw.githubusercontent.com/meishuu/tera-proxy-sls/master/package.json"
        }
      },
      "C:\\Users\\Trenton\\desktop\\tera-proxy"
    ]
  ],
  "_from": "meishuu/tera-proxy-sls",
  "_id": "tera-proxy-sls@0.1.0",
  "_inCache": true,
  "_location": "/tera-proxy-sls",
  "_phantomChildren": {},
  "_requested": {
    "raw": "tera-proxy-sls@github:meishuu/tera-proxy-sls",
    "scope": null,
    "escapedName": "tera-proxy-sls",
    "name": "tera-proxy-sls",
    "rawSpec": "github:meishuu/tera-proxy-sls",
    "spec": "github:meishuu/tera-proxy-sls",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:meishuu/tera-proxy-sls.git",
      "sshUrl": "git+ssh://git@github.com/meishuu/tera-proxy-sls.git",
      "httpsUrl": "git+https://github.com/meishuu/tera-proxy-sls.git",
      "gitUrl": "git://github.com/meishuu/tera-proxy-sls.git",
      "shortcut": "github:meishuu/tera-proxy-sls",
      "directUrl": "https://raw.githubusercontent.com/meishuu/tera-proxy-sls/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/meishuu/tera-proxy-sls.git#6841c18fd0ec851a0e530489332716dc3cf7ca9c",
  "_shasum": "34799d436e518fb69255eb02e0c11195cb4160be",
  "_shrinkwrap": null,
  "_spec": "tera-proxy-sls@github:meishuu/tera-proxy-sls",
  "_where": "C:\\Users\\Trenton\\desktop\\tera-proxy",
  "author": {
    "name": "meishu"
  },
  "bugs": {
    "url": "https://github.com/meishuu/tera-proxy-sls/issues"
  },
  "dependencies": {
    "http-proxy": "^1.15.1",
    "xmldom": "^0.1.22"
  },
  "description": "Adds servers to the EME TERA server list.",
  "devDependencies": {},
  "engines": {
    "node": ">=6.0.0"
  },
  "gitHead": "6841c18fd0ec851a0e530489332716dc3cf7ca9c",
  "homepage": "https://github.com/meishuu/tera-proxy-sls#readme",
  "license": "ISC",
  "main": "index.js",
  "name": "tera-proxy-sls",
  "optionalDependencies": {},
  "readme": "# tera-proxy-sls\r\n\r\nSpawns an HTTP proxy server to modify a TERA server list.\r\n\r\n## Example:\r\n```javascript\r\nvar SlsProxy = require('sls');\r\nvar proxy = new SlsProxy({\r\n  customServers: {\r\n    4009: { name: 'Celestial Chills', port: 9999, overwrite: false }\r\n  }\r\n});\r\nproxy.listen('127.0.0.1', () => console.log('listening'));\r\nprocess.on('SIGHUP', () => proxy.close());\r\n```\r\n\r\n## API Reference:\r\n\r\n### `new SlsProxy(opts)`\r\nConstructor with the following allowed options:\r\n * `host`: The hostname for the target server list. Default: `sls.service.enmasse.com`\r\n * `port`: The port for the target server list and for the proxy server. Default: `8080`\r\n * `customServers`: An object of custom servers. See `setServers` below for details. Default: `{}`\r\n * `listenHostname`: The hostname for the proxy server to accept connections on. See `net.server.listen`. Default: `127.0.0.1`\r\n\r\n### `proxy.setServers(servers)`\r\nSets the custom server object where `servers` is a mapping of server IDs with custom options.\r\n\r\nFor each server, valid options are:\r\n * `ip`: The IP to point to for the custom server. Default: `127.0.0.1`\r\n * `port`: The port for the custom server. Default: `null` (no change)\r\n * `name`: The name to use for this server in the list. Default: `null` (no change)\r\n * `overwrite`: If `true`, this custom server will completely replace the original one in the list. Default: `false`\r\n\r\nIf `overwrite` is `false` for a server ID, then the `crowdness` for the new server will have a sort value of `0`\r\nto give it priority over the old server when TERA selects which one to automatically log into.\r\n\r\n### `proxy.fetch(callback)`\r\nFetches a map of server IDs and simplified properties from the official list.\r\n\r\n`callback` receives two parameters:\r\n * `err`: The error, or `null` if none.\r\n * `servers`: An object mapping IDs to objects containing server metadata.\r\n\r\nExample result:\r\n```json\r\n{\r\n  \"4004\": {\r\n    \"id\": \"4004\",\r\n    \"ip\": \"208.67.49.28\",\r\n    \"port\": \"10001\",\r\n    \"name\": \"Tempest Reach\"\r\n  },\r\n  \"4009\": {\r\n    \"id\": \"4009\",\r\n    \"ip\": \"208.67.49.68\",\r\n    \"port\": \"10001\",\r\n    \"name\": \"Celestial Hills - Roleplay\"\r\n  },\r\n  \"4012\": {\r\n    \"id\": \"4012\",\r\n    \"ip\": \"208.67.49.92\",\r\n    \"port\": \"10001\",\r\n    \"name\": \"Mount Tyrannas\"\r\n  }\r\n}\r\n```\r\n\r\n### `proxy.listen(hostname, callback)`\r\nStarts an HTTP server listening on `hostname`, using `callback` as the handler for the `listening` event\r\n(see [net.Server#listening](https://nodejs.org/api/net.html#net_event_listening)). If there was an error,\r\nit will be passed as the first parameter to `callback`.\r\n\r\nThis also modifies `/etc/hosts` to point `proxy.host` to `127.0.0.1`, which may fail without administrative\r\npermissions.\r\n\r\n### `proxy.close()`\r\nCloses the HTTP server and removes the entry from `/etc/hosts`.\r\n\r\n**This should be called on termination if `proxy.listen` is called.**\r\nOtherwise, the entry in the hosts file will remain, even though the SLS proxy server is no longer running.\r\nIt is not necessary to call this if `listen` errors, but there shouldn't be any harm in doing this step anyway.\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/meishuu/tera-proxy-sls.git"
  },
  "version": "0.1.0"
}
